<?xml version="1.0" encoding="UTF-8" ?>
<feed  version="1.0" hasPendingRequests="false" >
  <company></company>
  <status>200</status>
  <errmsg>OK</errmsg>
  <interval>0</interval>
    <entry type="predatasource">
        <version>1650988746</version>
        <name>Microsoft_IIS_Server_WinRM</name>
        <displayedas>IIS(WinRM)</displayedas>
        <description>Monitors Windows IIS service metrics such as connections, service uptime, data throughput, etc.</description>
        <collector>batchscript</collector>
        <hasMultiInstances>true</hasMultiInstances>
        <useWildValueAsUniqueIdentifier>false</useWildValueAsUniqueIdentifier>
        <schedule>240</schedule>
        <appliesTo>hasCategory(&#34;MicrosoftIIS&#34;) &#38;&#38; (winrm.user &#38;&#38; winrm.pass)</appliesTo>
        <wildcardauto>true</wildcardauto>
        <wildcardpersist>false</wildcardpersist>
        <wildcardlinuxscript>ad_script</wildcardlinuxscript>
        <wildcardlinuxcmdline>type=&#34;powerShell&#34; </wildcardlinuxcmdline>
        <wildcardwinscript>ad_script</wildcardwinscript>
        <wildcardwincmdline>type=&#34;powerShell&#34; </wildcardwincmdline>
        <wildcardgroovyscript>&#60;# © 2007-2020 - LogicMonitor, Inc.  All rights reserved. #&#62;

#######################      Active Discovery      #########################
# Purpose:
# Author:
#------------------------------------------------------------------------------------------------------------
# Prerequisites:
#
#
#Requires -Version 3
#------------------------------------------------------------------------------------------------------------
# Clears the CLI of any text
Clear-Host
# Clears memory of all previous variables
Remove-Variable * -ErrorAction SilentlyContinue
#------------------------------------------------------------------------------------------------------------
# Initialize Variables
$WinRmUser = &#39;##WINRM.USER##&#39;
$WinRmPass = &#39;##WINRM.PASS##&#39;
$Hostname = &#39;##SYSTEM.HOSTNAME##&#39;
$WinRMHttpPort = &#39;##WINRM.HTTP.PORT##&#39;
$WinRMHttpsPort = &#39;##WINRM.HTTPS.PORT##&#39;
$CollectorName = hostname

#Collect Auto Props set by Microsoft_PowerShell_WinRM_Info PS


$WinRMHTTPSEnabled = &#39;##AUTO.WINRM.HTTPS.ENABLED##&#39;
$WinRMHTTPEnabled = &#39;##AUTO.WINRM.HTTP.ENABLED##&#39;

#If WINRM.HTTP/HTTPS.PORT is set use that value otherwise fallback to what was detected during PS detection
If ([string]::IsNullOrWhiteSpace($WinRMHttpsPort) -or ($WinRMHttpsPort -like &#39;*WINRM.HTTPS.PORT*&#39;)) {
    $WinRMHTTPSPort = &#39;##AUTO.WINRM.HTTPS.PORT##&#39;
}
If ([string]::IsNullOrWhiteSpace($WinRMHttpPort) -or ($WinRMHttpPort -like &#39;*WINRM.HTTP.PORT*&#39;)) {
    $WinRMHTTPPort = &#39;##AUTO.WINRM.HTTP.PORT##&#39;
} 

# Resolve hostname IP/Name to FQDN for WinRM over https
$Hostname = [System.Net.Dns]::GetHostEntry($Hostname).Hostname

#Set parameters
$WSManParams = @{
    ErrorAction = &#39;SilentlyContinue&#39;
    Filter = &#39;SELECT * FROM Win32_PerfRawData_W3SVC_WebService&#39;
    ResourceURI = &#39;wmicimv2/*&#39;
    Enumerate = $true
}

#-----Determine the type of query to make-----
# are WinRM user/pass props set -- e.g. are these device props either not substiuted or blank
If (([string]::IsNullOrWhiteSpace($WinRmUser) -and [string]::IsNullOrWhiteSpace($WinRmPass)) -or (($WinRmUser -like &#39;*WINRM.USER*&#39;) -and ($WinRmPass -like &#39;*WINRM.PASS*&#39;))) {
    $WSManParams.ComputerName = $Hostname
} 
Else {
    # yes. convert user/password into a credential string
    $RemotePass = ConvertTo-SecureString -String $WinRmPass -AsPlainText -Force;
    $RemoteCredential = New-Object -typename System.Management.Automation.PSCredential -argumentlist $WinRmUser, $RemotePass;
    $WSManParams.ComputerName = $Hostname
    $WSManParams.Authentication = &#39;default&#39;
    $WSManParams.Credential = $RemoteCredential
}

#Get configured WinRM HTTPS Port if configured
If($WinRMHTTPSEnabled -eq $true){
    $WSManParams.Port = $WinRMHttpsPort
    $WSManParams.UseSSL = $true
}
#Get configured WinRM HTTPS Port if configured
ElseIf($WinRMHTTPEnabled -eq $true){
    $WSManParams.Port = $WinRMHttpPort
    $WSManParams.UseSSL = $false
}
#WinRM not detected as being configured, quit processing any further
Else{
    Write-Host &#34;WinRM is not detected as being enabled, please ensure winRM is configured and try again&#34;
    Exit 1
}

#Attempt to get WMI results over WinRM
$Result = Get-WSManInstance @WSManParams
If($Result){
    Foreach($Item in $Result){
        $Wildvalue = $Item.Name -replace &#39;[:|\\|\s|=|#]+&#39;,&#39;_&#39;
        Write-Host &#34;$Wildvalue##$($Item.Name)######auto.name=$($Item.Name)&#34;
    }
}
Exit 0</wildcardgroovyscript>
        <wildcardschedule>1440</wildcardschedule>
        <wildcarddisable>false</wildcarddisable>
        <wildcarddeleteinactive>true</wildcarddeleteinactive>
        <agdmethod>none</agdmethod>
        <agdparams></agdparams>
        <group></group>
        <tags></tags>
        <technology></technology>
        <adlist><![CDATA[{"agdmethod":"none","method":"ad_script","agdparams":"","id":0,"filters":[{"attribute":"auto.name","operation":"NotEqual","value":"_Total"}],"params":{"type":"powerShell","groovyscript":"<# © 2007-2020 - LogicMonitor, Inc.  All rights reserved. #>\n\n#######################      Active Discovery      #########################\n# Purpose:\n# Author:\n#------------------------------------------------------------------------------------------------------------\n# Prerequisites:\n#\n#\n#Requires -Version 3\n#------------------------------------------------------------------------------------------------------------\n# Clears the CLI of any text\nClear-Host\n# Clears memory of all previous variables\nRemove-Variable * -ErrorAction SilentlyContinue\n#------------------------------------------------------------------------------------------------------------\n# Initialize Variables\n$WinRmUser = '##WINRM.USER##'\n$WinRmPass = '##WINRM.PASS##'\n$Hostname = '##SYSTEM.HOSTNAME##'\n$WinRMHttpPort = '##WINRM.HTTP.PORT##'\n$WinRMHttpsPort = '##WINRM.HTTPS.PORT##'\n$CollectorName = hostname\n\n#Collect Auto Props set by Microsoft_PowerShell_WinRM_Info PS\n\n\n$WinRMHTTPSEnabled = '##AUTO.WINRM.HTTPS.ENABLED##'\n$WinRMHTTPEnabled = '##AUTO.WINRM.HTTP.ENABLED##'\n\n#If WINRM.HTTP/HTTPS.PORT is set use that value otherwise fallback to what was detected during PS detection\nIf ([string]::IsNullOrWhiteSpace($WinRMHttpsPort) -or ($WinRMHttpsPort -like '*WINRM.HTTPS.PORT*')) {\n    $WinRMHTTPSPort = '##AUTO.WINRM.HTTPS.PORT##'\n}\nIf ([string]::IsNullOrWhiteSpace($WinRMHttpPort) -or ($WinRMHttpPort -like '*WINRM.HTTP.PORT*')) {\n    $WinRMHTTPPort = '##AUTO.WINRM.HTTP.PORT##'\n} \n\n# Resolve hostname IP/Name to FQDN for WinRM over https\n$Hostname = [System.Net.Dns]::GetHostEntry($Hostname).Hostname\n\n#Set parameters\n$WSManParams = @{\n    ErrorAction = 'SilentlyContinue'\n    Filter = 'SELECT * FROM Win32_PerfRawData_W3SVC_WebService'\n    ResourceURI = 'wmicimv2/*'\n    Enumerate = $true\n}\n\n#-----Determine the type of query to make-----\n# are WinRM user/pass props set -- e.g. are these device props either not substiuted or blank\nIf (([string]::IsNullOrWhiteSpace($WinRmUser) -and [string]::IsNullOrWhiteSpace($WinRmPass)) -or (($WinRmUser -like '*WINRM.USER*') -and ($WinRmPass -like '*WINRM.PASS*'))) {\n    $WSManParams.ComputerName = $Hostname\n} \nElse {\n    # yes. convert user/password into a credential string\n    $RemotePass = ConvertTo-SecureString -String $WinRmPass -AsPlainText -Force;\n    $RemoteCredential = New-Object -typename System.Management.Automation.PSCredential -argumentlist $WinRmUser, $RemotePass;\n    $WSManParams.ComputerName = $Hostname\n    $WSManParams.Authentication = 'default'\n    $WSManParams.Credential = $RemoteCredential\n}\n\n#Get configured WinRM HTTPS Port if configured\nIf($WinRMHTTPSEnabled -eq $true){\n    $WSManParams.Port = $WinRMHttpsPort\n    $WSManParams.UseSSL = $true\n}\n#Get configured WinRM HTTPS Port if configured\nElseIf($WinRMHTTPEnabled -eq $true){\n    $WSManParams.Port = $WinRMHttpPort\n    $WSManParams.UseSSL = $false\n}\n#WinRM not detected as being configured, quit processing any further\nElse{\n    Write-Host \"WinRM is not detected as being enabled, please ensure winRM is configured and try again\"\n    Exit 1\n}\n\n#Attempt to get WMI results over WinRM\n$Result = Get-WSManInstance @WSManParams\nIf($Result){\n    Foreach($Item in $Result){\n        $Wildvalue = $Item.Name -replace '[:|\\\\|\\s|=|#]+','_'\n        Write-Host \"$Wildvalue##$($Item.Name)######auto.name=$($Item.Name)\"\n    }\n}\nExit 0"}}]]></adlist>
        <schemaVersion>2</schemaVersion>
        <dataSourceType>1</dataSourceType>
        <attributes>
        <attribute>
            <name>scripttype</name>
            <value>powerShell</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>scriptgroovy</name>
            <value>&#60;# © 2007-2020 - LogicMonitor, Inc.  All rights reserved. #&#62;

#######################      Collection      #########################
# Purpose:
# Author:
#------------------------------------------------------------------------------------------------------------
# Prerequisites:
#
#
#Requires -Version 3
#------------------------------------------------------------------------------------------------------------
# Clears the CLI of any text
Clear-Host
# Clears memory of all previous variables
Remove-Variable * -ErrorAction SilentlyContinue
#------------------------------------------------------------------------------------------------------------
# Initialize Variables
$WinRmUser = &#39;##WINRM.USER##&#39;
$WinRmPass = &#39;##WINRM.PASS##&#39;
$Hostname = &#39;##SYSTEM.HOSTNAME##&#39;
$WinRMHttpPort = &#39;##WINRM.HTTP.PORT##&#39;
$WinRMHttpsPort = &#39;##WINRM.HTTPS.PORT##&#39;
$CollectorName = hostname

#Collect Auto Props set by Microsoft_PowerShell_WinRM_Info PS


$WinRMHTTPSEnabled = &#39;##AUTO.WINRM.HTTPS.ENABLED##&#39;
$WinRMHTTPEnabled = &#39;##AUTO.WINRM.HTTP.ENABLED##&#39;

#If WINRM.HTTP/HTTPS.PORT is set use that value otherwise fallback to what was detected during PS detection
If ([string]::IsNullOrWhiteSpace($WinRMHttpsPort) -or ($WinRMHttpsPort -like &#39;*WINRM.HTTPS.PORT*&#39;)) {
    $WinRMHTTPSPort = &#39;##AUTO.WINRM.HTTPS.PORT##&#39;
}
If ([string]::IsNullOrWhiteSpace($WinRMHttpPort) -or ($WinRMHttpPort -like &#39;*WINRM.HTTP.PORT*&#39;)) {
    $WinRMHTTPPort = &#39;##AUTO.WINRM.HTTP.PORT##&#39;
} 

# Resolve hostname IP/Name to FQDN for WinRM over https
$Hostname = [System.Net.Dns]::GetHostEntry($Hostname).Hostname

#Set parameters
$WSManParams = @{
    ErrorAction = &#39;SilentlyContinue&#39;
    Filter = &#39;SELECT * FROM Win32_PerfRawData_W3SVC_WebService&#39;
    ResourceURI = &#39;wmicimv2/*&#39;
    Enumerate = $true
}

#-----Determine the type of query to make-----
# are WinRM user/pass props set -- e.g. are these device props either not substiuted or blank
If (([string]::IsNullOrWhiteSpace($WinRmUser) -and [string]::IsNullOrWhiteSpace($WinRmPass)) -or (($WinRmUser -like &#39;*WINRM.USER*&#39;) -and ($WinRmPass -like &#39;*WINRM.PASS*&#39;))) {
    $WSManParams.ComputerName = $Hostname
} 
Else {
    # yes. convert user/password into a credential string
    $RemotePass = ConvertTo-SecureString -String $WinRmPass -AsPlainText -Force;
    $RemoteCredential = New-Object -typename System.Management.Automation.PSCredential -argumentlist $WinRmUser, $RemotePass;
    $WSManParams.ComputerName = $Hostname
    $WSManParams.Authentication = &#39;default&#39;
    $WSManParams.Credential = $RemoteCredential
}

#Get configured WinRM HTTPS Port if configured
If($WinRMHTTPSEnabled -eq $true){
    $WSManParams.Port = $WinRMHttpsPort
    $WSManParams.UseSSL = $true
}
#Get configured WinRM HTTPS Port if configured
ElseIf($WinRMHTTPEnabled -eq $true){
    $WSManParams.Port = $WinRMHttpPort
    $WSManParams.UseSSL = $false
}
#WinRM not detected as being configured, quit processing any further
Else{
    Write-Host &#34;WinRM is not detected as being enabled, please ensure winRM is configured and try again&#34;
    Exit 1
}

#Attempt to get WMI results over WinRM
$Result = Get-WSManInstance @WSManParams
If($Result){
    Foreach($Item in $Result){
        $Wildvalue = $Item.Name -replace &#39;[:|\\|\s|=|#]+&#39;,&#39;_&#39;
        Write-Host &#34;$Wildvalue.BytesReceivedPerSec=$($Item.BytesReceivedPerSec)&#34;
        Write-Host &#34;$Wildvalue.BytesSentPerSec=$($Item.BytesSentPerSec)&#34;
        Write-Host &#34;$Wildvalue.CurrentConnections=$($Item.CurrentConnections)&#34;
        Write-Host &#34;$Wildvalue.NotFoundErrorsPerSec=$($Item.NotFoundErrorsPerSec)&#34;
        Write-Host &#34;$Wildvalue.ServiceUptime=$($Item.ServiceUptime)&#34;
        Write-Host &#34;$Wildvalue.TotalGetRequests=$($Item.TotalGetRequests)&#34;
        Write-Host &#34;$Wildvalue.TotalMethodRequests=$($Item.TotalMethodRequests)&#34;
    }
}
Exit 0</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowsscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowscmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxcmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>__filter_0</name>
            <value>auto.name	NotEqual	_Total</value>
            <comment>Use Overview graphs for Total</comment>
        </attribute>
        </attributes>
        <datapoints>
        <datapoint>
            <name>404Percent</name>
            <originId>LN20Z24dRg2NYg_h9xqgSg</originId>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>expression</postprocessormethod>
            <postprocessorparam>if(gt(TotalGetRequests,1),100*NotFoundErrorsPerSec/if(TotalGetRequests,TotalGetRequests,1),0)</postprocessorparam>
            <usevalue></usevalue>
            <alertexpr>&#62;= 20</alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody>IIS instance ##INSTANCE## on Windows host ##HOST## is experiencing a high rate of 404 errors at ##VALUE##%, placing the instance into ##LEVEL## state.

This may indicate bad content on the site ##INSTANCE## ##DSIDESCRIPTION##, or a DoS attack. If TotalRequests are low, it is unlikely to be an attack.

This started at ##START##, -- or ##DURATION## ago.</alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Percent of total requests which return a 404.</description>
            <maxvalue></maxvalue>
            <minvalue></minvalue>
            <userparam1></userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>BytesReceivedPerSec</name>
            <originId>YGK70H5FTO60R6FxWc2w1Q</originId>
            <dataType>7</dataType>
            <type>3</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.BytesReceivedPerSec</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Rate at which bytes are received by the web service.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>BytesReceivedPerSec</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>BytesSentPerSec</name>
            <originId>8BZ52giwRKmPm5-O1Xa85w</originId>
            <dataType>7</dataType>
            <type>3</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.BytesSentPerSec</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Rate at which bytes are sent by the web service.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>BytesSentPerSec</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>CurrentConnections</name>
            <originId>7pWZHjQrSqyw3LLYXTiD0g</originId>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.CurrentConnections</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Current number of connections established with the web service.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>CurrentConnections</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>NotFoundErrorsPerSec</name>
            <originId>y0Sw4VrhT1aoMYMB-c9OZQ</originId>
            <dataType>7</dataType>
            <type>3</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.NotFoundErrorsPerSec</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Rate of errors due to requests that could not be satisfied by the server because the requested document could not be found. These errors are generally reported as an HTTP 404 error code to the client.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>NotFoundErrorsPerSec</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>ServiceUptime</name>
            <originId>TLGJty0ETdi6vFLCSN3K1A</originId>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.ServiceUptime</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Time that the web service is available to users.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>ServiceUptime</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>TotalGetRequests</name>
            <originId>hGYTEN4cSL-fXmDDmjL__A</originId>
            <dataType>7</dataType>
            <type>3</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.TotalGetRequests</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>3</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Number of HTTP requests using the GET method (counted after service startup). GET requests are generally used for basic file retrievals or image maps, though they can be used with forms.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>TotalGetRequests</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        <datapoint>
            <name>TotalMethodRequests</name>
            <originId>IAE2ocokQ8OQeWMMGl3FEg</originId>
            <dataType>7</dataType>
            <type>3</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.TotalMethodRequests</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description>Rate at which all HTTP requests are made.</description>
            <maxvalue></maxvalue>
            <minvalue>0</minvalue>
            <userparam1>TotalMethodRequests</userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>4</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        </datapoints>
        <graphs>
        <graph>
            <name>Connections</name>
            <title>Connections</title>
            <originId></originId>            <verticallabel>#/sec</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>CurrentConnections</name>
            <datapointname>CurrentConnections</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>2</type>
                <legend>Current Connections</legend>
                <color>blue</color>
                <datapointname>CurrentConnections</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        <graph>
            <name>Service Uptime</name>
            <title>Service Uptime</title>
            <originId></originId>            <verticallabel>days</verticallabel>
            <rigid>true</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>4</displayprio>
            <timescale>1month</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>ServiceUptime</name>
            <datapointname>ServiceUptime</datapointname>
            <originId></originId>
            <cf>3</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
        <graphvirtualdatapoint>
            <name>ServiceUptimeDays</name>
            <rpn>ServiceUptime/86400</rpn>
            <originId></originId>
        </graphvirtualdatapoint>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>1</type>
                <legend>Service Uptime (days)</legend>
                <color>yellow</color>
                <datapointname>ServiceUptimeDays</datapointname>
                <isvirtualdatapoint>true</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        <graph>
            <name>Throughput</name>
            <title>Throughput</title>
            <originId></originId>            <verticallabel>bps</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>2</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>BytesReceivedPerSec</name>
            <datapointname>BytesReceivedPerSec</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
        <graphdatapoint>
            <name>BytesSentPerSec</name>
            <datapointname>BytesSentPerSec</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
        <graphvirtualdatapoint>
            <name>ReceivedBits</name>
            <rpn>BytesReceivedPerSec*8</rpn>
            <originId></originId>
        </graphvirtualdatapoint>
        <graphvirtualdatapoint>
            <name>SentBits</name>
            <rpn>BytesSentPerSec*8</rpn>
            <originId></originId>
        </graphvirtualdatapoint>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>3</type>
                <legend>Received</legend>
                <color>blue</color>
                <datapointname>ReceivedBits</datapointname>
                <isvirtualdatapoint>true</isvirtualdatapoint>
            </graphdata>
            <graphdata>
                <type>3</type>
                <legend>Sent</legend>
                <color>green</color>
                <datapointname>SentBits</datapointname>
                <isvirtualdatapoint>true</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        <graph>
            <name>Traffic</name>
            <title>Traffic</title>
            <originId></originId>            <verticallabel>requests/sec</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>NotFoundErrorsPerSec</name>
            <datapointname>NotFoundErrorsPerSec</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
        <graphdatapoint>
            <name>TotalGetRequests</name>
            <datapointname>TotalGetRequests</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
        <graphdatapoint>
            <name>TotalMethodRequests</name>
            <datapointname>TotalMethodRequests</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>1</type>
                <legend>404 Errors</legend>
                <color>red</color>
                <datapointname>NotFoundErrorsPerSec</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            <graphdata>
                <type>1</type>
                <legend>GET Requests</legend>
                <color>green</color>
                <datapointname>TotalGetRequests</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            <graphdata>
                <type>1</type>
                <legend>Total Requests</legend>
                <color>black</color>
                <datapointname>TotalMethodRequests</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        </graphs>
        <overviewgraphs>
        <overviewgraph>
            <name>Requests</name>
            <title>Total Requests</title>
            <verticallabel>#/sec</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <aggregated>false</aggregated>
            <originId></originId>
            <datapoints>
        <overviewgraphdatapoint>
            <name>TotalMethodRequests</name>
            <datapointname>TotalMethodRequests</datapointname>
            <cf>1</cf>
            <aggregateMethod>sum</aggregateMethod>
            <originId></originId>
        </overviewgraphdatapoint>
            </datapoints>
            <virtualdatapoints>
            </virtualdatapoints>
            <lines>
            <overviewgraphline>
                <type>1</type>
                <legend>##INSTANCE##</legend>
                <datapointname>TotalMethodRequests</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
                <color>Auto</color>
            </overviewgraphline>
            </lines>
        </overviewgraph>
        </overviewgraphs>
        <scripts>
        </scripts>
    </entry>
</feed>
